{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","sortBy","setSortBy","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","NONE","reverse","console","debug","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAjCD,SACLA,EACAJ,EACAE,GAEA,IAAMG,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKN,EAASU,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKb,EAASe,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAE3C,KAAKhB,EAASiB,MAYhB,OAPIb,GACFK,EAAaS,UAIfC,QAAQC,MAAMd,EAAQF,GAEfK,EAOOY,CAAkBpB,EAAiBG,EAAYE,GAmB7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEhB,IAAWN,EAASU,SAChB,oBACA,6BAENc,QA3BmB,WACzBjB,EAAUP,EAASU,WAmBf,iCAYA,wBACEa,KAAK,SACLD,UACEhB,IAAWN,EAASe,OAChB,oBACA,6BAENS,QAnCa,WACnBjB,EAAUP,EAASe,SA2Bf,4BAYA,wBACEQ,KAAK,SACLD,WACiB,IAAflB,EACI,oBACA,6BAENoB,QA3CY,WAClBnB,GAAeD,IAmCX,sBAYgB,IAAfA,GAAwBE,IAAWN,EAASiB,KACzC,KAEA,wBACEM,KAAK,SACLD,UAAU,4BACVE,QAlDM,WAChBnB,GAAc,GACdE,EAAUP,EAASiB,OA6CX,sBAUN,6BACE,6BACGT,EAAMiB,KAAI,SAAAC,GACT,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCnItCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0699d608.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype IsReversed = boolean;\ntype SortBy = SortType;\n\nexport function getReorderedGoods(\n  goods: string[],\n  isReversed: IsReversed,\n  sortBy: SortBy,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortBy) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.debug(sortBy, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(0);\n\n  const goods = getReorderedGoods(goodsFromServer, isReversed, sortBy);\n\n  const sortAlphabetically = () => {\n    setSortBy(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortType.LENGTH);\n  };\n\n  const reverseSort = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const resetSort = () => {\n    setIsReversed(false);\n    setSortBy(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortBy === SortType.ALPHABET\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortBy === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed === true\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={reverseSort}\n        >\n          Reverse\n        </button>\n\n        {isReversed === false && sortBy === SortType.NONE\n          ? null\n          : (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetSort}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => {\n            return (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            );\n          })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}